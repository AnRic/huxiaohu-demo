<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<!--参考资料：https://www.cnblogs.com/leecong/p/5776970.html-->
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <property resource="application.properties"/>
    <!--定义参数,后面可以通过${APP_NAME}使用-->
    <property name="APP_NAME" value="transport-start"/>
    <property name="LOG_PATH" value="./logs/${APP_NAME}"/>
    <property name="LOG_FILE" value="${LOG_PATH}/application.log"/>

    <!-- 日志格式 -->
    <property name="LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} [%file:%L] - %msg%n"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="APPLICATION"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--定义日志输出的路径-->
        <file>${LOG_FILE}</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/application-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxHistory>3</maxHistory>
            <maxFileSize>300MB</maxFileSize>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_APPLICATION" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPLICATION"/>
        <includeCallerData>true</includeCallerData> <!-- Copy caller data toListExecutionOrderRequest event -->
    </appender>

    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="APPENDER_TASK" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/task.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
<!--            <charset>UTF-8</charset>-->
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${LOG_PATH}/task-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>1</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="ASYNC_TASK" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPENDER_TASK"/>
    </appender>


    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="APPENDER_EXEC_ORDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/exec-order.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${LOG_PATH}/exec-order-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>3</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录info级别的 -->
        <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--            <level>info</level>-->
        <!--            <onMatch>ACCEPT</onMatch>-->
        <!--            <onMismatch>DENY</onMismatch>-->
        <!--        </filter>-->
    </appender>

    <appender name="ASYNC_EXEC_ORDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPENDER_EXEC_ORDER"/>
    </appender>

    <appender name="OTA_ORDER_SYNC" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/OTAOrderSync.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/OTAOrderSync-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>3</maxHistory>
        </rollingPolicy>

    </appender>

    <appender name="ASYNC_OTA_ORDER_SYNC" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="OTA_ORDER_SYNC"/>
    </appender>

    <appender name="OTA_ORDER_SYNC_KEY_DATA" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/OTAOrderSyncKeyData.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/OTAOrderSyncKeyData-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>

    </appender>

    <appender name="ASYNC_OTA_ORDER_SYNC_KEY_DATA" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="OTA_ORDER_SYNC_KEY_DATA"/>
    </appender>


    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="APPENDER_ACTIVE_SCORE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/active_score.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${LOG_PATH}/active-score-%d{yyyy-MM-dd_HH}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>2</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
        <!-- 此日志文件只记录info级别的 -->
        <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--            <level>info</level>-->
        <!--            <onMatch>ACCEPT</onMatch>-->
        <!--            <onMismatch>DENY</onMismatch>-->
        <!--        </filter>-->
    </appender>

    <appender name="ASYNC_APPENDER_ACTIVE_SCORE" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPENDER_ACTIVE_SCORE"/>
    </appender>

    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="APPENDER_ONLINE_CHECK" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/driver-online.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${LOG_PATH}/driver-online-%d{yyyy-MM-dd_HH}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>2</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_APPENDER_ONLINE_CHECK" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPENDER_ONLINE_CHECK"/>
    </appender>


    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="APPENDER_H5_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/h5-log.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${LOG_PATH}/h5-log-%d{yyyy-MM-dd_HH}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>7</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_APPENDER_H5_LOG" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPENDER_H5_LOG"/>
    </appender>

    <appender name="INFO_APPENDER"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/info.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxHistory>3</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>100MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--            <level>info</level>-->
        <!--            <onMatch>ACCEPT</onMatch>-->
        <!--            <onMismatch>NEUTRAL</onMismatch>-->
        <!--        </filter>-->
    </appender>

    <appender name="ASYNC_INFO_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="INFO_APPENDER"/>
        <includeCallerData>true</includeCallerData> <!-- Copy caller data toListExecutionOrderRequest event -->
    </appender>


    <!-- 时间滚动输出 level为 ERROR 日志 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>3</maxHistory>
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="ASYNC_ERROR_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="ERROR_FILE"/>
        <includeCallerData>true</includeCallerData> <!-- Copy caller data toListExecutionOrderRequest event -->
    </appender>

    <!--派单相关的日志配置-->
    <appender name="DISPATCH_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/dispatch-log.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/dispatch-log-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
    </appender>
    <appender name="ASYNC_DISPATCH_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="DISPATCH_APPENDER"/>
        <includeCallerData>true</includeCallerData>
    </appender>

    <appender name="SLOW_MONITOR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/slow-monitor.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/slow-monitor-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>300MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>3</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_SLOW_MONITOR" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="SLOW_MONITOR"/>
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="APPENDER_OTA_COLLECT_TASK" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/ota-collect.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${LOG_PATH}/ota-collect-%d{yyyy-MM-dd_HH}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>2</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_APPENDER_OTA_COLLECT_TASK" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPENDER_OTA_COLLECT_TASK"/>
    </appender>

    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="APPENDER_OTA_OPERATE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/ota-operate.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${LOG_PATH}/ota-operate-%d{yyyy-MM-dd_HH}-%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>3</maxHistory>
            <totalSizeCap>300MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC_APPENDER_OTA_OPERATE" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="APPENDER_OTA_OPERATE"/>
    </appender>

    <root level="info">
        <appender-ref ref="ASYNC_APPLICATION"/>
        <appender-ref ref="ASYNC_ERROR_FILE"/>
    </root>

    <!--OTA operate-->
    <logger name="ota-operate" level="info" additivity="false">
        <appender-ref ref="ASYNC_APPENDER_OTA_OPERATE"/>
    </logger>

    <!--OTA同步-->
    <logger name="ota-collect" level="info" additivity="false">
        <appender-ref ref="ASYNC_APPENDER_OTA_COLLECT_TASK"/>
    </logger>

    <!-- OTA同步订单 -->
    <logger name="OTAOrderSync" level="info" additivity="false">
        <appender-ref ref="ASYNC_OTA_ORDER_SYNC"/>
    </logger>

    <logger name="importantData" level="info" additivity="false">
        <appender-ref ref="ASYNC_OTA_ORDER_SYNC_KEY_DATA"/>
    </logger>

    <!--司机活跃直属-->
    <logger name="driverActiveScore" level="info" additivity="false">
        <appender-ref ref="ASYNC_APPENDER_ACTIVE_SCORE"/>
    </logger>
    <!--司机在线情况-->
    <logger name="driverOnline" level="info" additivity="false">
        <appender-ref ref="ASYNC_APPENDER_ONLINE_CHECK"/>
    </logger>
<!--    <logger name="tengfei-monitor-slow" level="info" additivity="false">-->
<!--        <appender-ref ref="ASYNC_SLOW_MONITOR"/>-->
<!--    </logger>-->
    <!--这个logger没有指定appender，它会继承root节点中定义的那些appender-->
<!--    <logger name="com.tengfei.transport" level="info" additivity="false"/>-->
    <!--定时任务日志-->
    <logger name="com.tengfei.transport.offline.timer" level="INFO" additivity="false">
        <appender-ref ref="ASYNC_TASK"/>
    </logger>

    <!--履约单日志-->
    <logger name="com.tengfei.transport.order" level="INFO" additivity="false">
        <appender-ref ref="ASYNC_EXEC_ORDER"/>
    </logger>

    <!--
           普通的 logger`
           name：类名或包名，标志该 logger 与哪个包或哪个类绑定
           level：该 logger 的日志级别
           additivity：是否将日志信息传递给上一级  如果没有设置 additivity="false" ,就会导致一条日志在控制台输出两次的情况
       -->

    <!-- info log -->
    <logger name="info" level="info" additivity="false">
        <appender-ref ref="ASYNC_INFO_APPENDER"/>
    </logger>
    <logger name="com.tengfei.transport.order" level="info">
        <appender-ref ref="ASYNC_DISPATCH_APPENDER"/>
    </logger>


<!--    <springProfile name="dev">-->
        <root level="info">
            <appender-ref ref="CONSOLE"/>
        </root>

        <logger name="com.tengfei.transport" level="info"/>
        <!--数据库日志-->
        <!--additivity表示要不要使用rootLogger配置的appender进行输出-->
        <logger name="com.tengfei.transport.infrastructure.tunnel" level="TRACE" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
<!--    </springProfile>-->



</configuration>
